name: general

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:
  macos-packaging:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install pyinstaller==6.11.1
          brew install create-dmg
      - name: Build and notarize the dmg file
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          chmod +x create-dmg.sh
          ./create-dmg.sh
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-files-macos
          path: |
            *.dmg
          retention-days: 14
  linux-packaging:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install OS Dependencies
        run: |
          sudo apt-get update
          sudo gem install fpm
          fpm --version
      - name: Install Qt Dependencies
        run: |
          # https://forum.qt.io/post/769050
          # Fix PyInstaller warnings of Qt Dependencies missing
          sudo apt-get install synaptic
          sudo apt-get install libxcb-icccm4 libxcb-image0-dev libxcb-keysyms1 libxcb-render-util0 libxcb-xkb1 libxcb-xinerama0 libxkbcommon-x11-0
      - name: Install Dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install pyinstaller==6.11.1
      - name: Build the deb package
        run: |
          chmod +x create-deb.sh
          ./create-deb.sh
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-files-deb
          path: |
            dist/*.deb
          retention-days: 14
  windows-packaging:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install pyinstaller==6.11.1
      - name: Install NSIS
        run: choco install nsis
      - name: Build with PyInstaller
        run: python build.py
      - name: Compile installer
        shell: bash  # Force bash shell for VERSION command
        run: |
          VERSION=$(python -c "import ode; print(ode.__version__)")
          makensis -DAPP_VERSION="$VERSION" ./packaging/windows/installer.nsi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: distribution-files-win
          path: |
            .\packaging\windows\*.exe
          retention-days: 14
