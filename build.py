import PyInstaller.__main__
import os
import platform
import sys

def build_application():
    """Build an executable file for the Application."""
    system = platform.system()
    if system == "Darwin":  # macOS
        icon_path = "packaging/macos/icon.icns"
        app_name = "OpenDataEditor"
    elif system == "Windows":
        icon_path = "packaging/windows/icon.ico"
        app_name = "opendataeditor"
    elif system == "Linux":
        icon_path = "packaging/linux/icon.svg"
        app_name = "opendataeditor"

    print("Creating executable file for Open Data Editor")

    params = [
        "ode/main.py",
        "--windowed",  # Required for Windows install to not open a console.
        "--collect-all", "frictionless",  # Frictionless depends on data files
        "--collect-all", "ode",  # Collect all assets from Open Data Editor
        "--collect-all", "llama_cpp",  # Collect all assets from llama_cpp
        "--collect-all", "numpy",  # Collect all assets from numpy (llama_cpp dependency)
        "--log-level",
        "WARN",
        "--name",
        app_name,
        "--noconfirm",
        "--icon",
        icon_path,
    ]

    if system == "Darwin":
        params.extend(["--osx-bundle-identifier", "org.okfn.opendataeditor"])

    if system == "Windows":
        # llama_cpp depends on vcomp140.dll and it is not properly collected by PyInstaller as it
        # is a dependency of shiboken6 as well. This library is only present in Windows if C++ Redistributable
        # is installed which might not be the case for all of our users.
        params.extend(["--add-binary", "C:\\Windows\\system32\\vcomp140.dll:."])

    cli_args =  sys.argv[1:]
    if cli_args:
        params.extend(cli_args)

    PyInstaller.__main__.run(params)

    # Clean the spec file generated by PyInstaller
    if os.path.exists(f"{app_name}.spec"):
        os.remove(f"{app_name}.spec")


if __name__ == "__main__":
    build_application()
